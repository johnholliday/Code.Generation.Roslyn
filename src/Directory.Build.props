<Project>

  <PropertyGroup>
    <Authors>Michael W. Powell</Authors>
    <Company>Kingdom Software</Company>
    <Product>Code.Generator.Roslyn</Product>
    <Copyright>Copyright (c) 2019</Copyright>
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Platform)'=='AnyCPU'">
    <WarningLevel>2</WarningLevel>
  </PropertyGroup>

  <PropertyGroup>
    <PackageProjectUrl>https://github.com/mwpowellhtx/Code.Generation.Roslyn</PackageProjectUrl>
  </PropertyGroup>

  <PropertyGroup>
    <RootNamespace>Code.Generation.Roslyn</RootNamespace>
    <NConsoleOptionsExtensionsVersion>[1.4.7,2)</NConsoleOptionsExtensionsVersion>
    <MicrosoftBuildVersion>[15.9.20,16)</MicrosoftBuildVersion>
    <MicrosoftCodeAnalysisCSharpVersion>[2.10,3)</MicrosoftCodeAnalysisCSharpVersion>
    <ValidationVersion>[2.4.22,3)</ValidationVersion>
    <NewtonsoftJsonVersion>[12.0.2,13)</NewtonsoftJsonVersion>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Defined for internal consistency with the Code Generation targets. -->
    <!-- Also, so as not to collide with https://www.nuget.org/packages/dotnet-codegen/ -->
    <CodeGenerationToolName>dotnet-cgr</CodeGenerationToolName>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="BumpAssemblyVersions" Version="1.2.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <!-- TODO: TBD: this is a workaround to a multi-targeting issue during the bump assembly versions invocation; occurs xN times, i.e. if there were N platforms.
   We think this is invoked asyncronously, because we may see +N, i.e. for incremental bump, or +N-1, i.e. if a middle one unwound last. This is not a CGR issue,
   per se, but we are working around that until we can resolve the issue in BumpAssemblyVersions itself. -->

  <!-- ReSharper disable UnknownProperty -->
  <ItemGroup Condition="Exists('..\packages\BumpAssemblyVersions\1.2.0\build\BumpAssemblyVersions.targets') And '$(PackageId)' == 'Code.Generation.Roslyn.BuildTime'">
    <BumpVersionSpec Include="Version" BuildProviderTemplate="SecondsSinceMidnight" Condition="'$(Configuration)' == 'Release'" />
    <BumpVersionSpec Include="AssemblyVersion" BuildProviderTemplate="SecondsSinceMidnight" Condition="'$(Configuration)' == 'Release'" />
    <BumpVersionSpec Include="FileVersion" BuildProviderTemplate="SecondsSinceMidnight" Condition="'$(Configuration)' == 'Release'" />
    <BumpVersionSpec Include="PackageVersion" BuildProviderTemplate="SecondsSinceMidnight" Condition="'$(Configuration)' == 'Release'" />
  </ItemGroup>

  <ItemGroup Condition="Exists('..\packages\BumpAssemblyVersions\1.2.0\build\BumpAssemblyVersions.targets') And '$(PackageId)' != 'Code.Generation.Roslyn.BuildTime'">
    <BumpVersionSpec Include="Version" BuildProviderTemplate="SecondsSinceMidnight" Condition="'$(Configuration)' == 'Release'" />
    <BumpVersionSpec Include="AssemblyVersion" BuildProviderTemplate="SecondsSinceMidnight" Condition="'$(Configuration)' == 'Release'" />
    <BumpVersionSpec Include="FileVersion" BuildProviderTemplate="SecondsSinceMidnight" Condition="'$(Configuration)' == 'Release'" />
    <BumpVersionSpec Include="PackageVersion" BuildProviderTemplate="SecondsSinceMidnight" Condition="'$(Configuration)' == 'Release'" />

    <!--<BumpVersionSpec Include="Version" PatchProviderTemplate="Increment" BuildProviderTemplate="SecondsSinceMidnight" Condition="'$(Configuration)' == 'Release'" />
    <BumpVersionSpec Include="AssemblyVersion" PatchProviderTemplate="Increment" BuildProviderTemplate="SecondsSinceMidnight" Condition="'$(Configuration)' == 'Release'" />
    <BumpVersionSpec Include="FileVersion" PatchProviderTemplate="Increment" BuildProviderTemplate="SecondsSinceMidnight" Condition="'$(Configuration)' == 'Release'" />
    <BumpVersionSpec Include="PackageVersion" PatchProviderTemplate="Increment" BuildProviderTemplate="SecondsSinceMidnight" Condition="'$(Configuration)' == 'Release'" />-->
  </ItemGroup>
  <!-- ReSharper restore UnknownProperty -->

  <ItemGroup Condition="Exists('..\packages\BumpAssemblyVersions\1.2.0\build\BumpAssemblyVersions.targets')">
    <BumpVersionSpec Include="Version" BuildProviderTemplate="Increment" Condition="'$(Configuration)' == 'Debug'" />
    <BumpVersionSpec Include="AssemblyVersion" BuildProviderTemplate="Increment" Condition="'$(Configuration)' == 'Debug'" />
    <BumpVersionSpec Include="FileVersion" BuildProviderTemplate="Increment" Condition="'$(Configuration)' == 'Debug'" />
    <BumpVersionSpec Include="PackageVersion" BuildProviderTemplate="Increment" Condition="'$(Configuration)' == 'Debug'" />
  </ItemGroup>

  <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
    <Exec Command="if exist &quot;$(ProjectDir)bin\$(Configuration)\*.nupkg&quot; del /f &quot;$(ProjectDir)bin\$(Configuration)\*.nupkg&quot;" />
  </Target>

</Project>
