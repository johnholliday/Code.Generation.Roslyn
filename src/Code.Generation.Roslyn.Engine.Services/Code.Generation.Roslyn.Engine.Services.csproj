<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <!-- We do still need to build under Release conditions, but we want to do the ReleaseInitial build first in order to prepare the Versions. -->
    <Configurations>Debug;Release;ReleaseInitial</Configurations>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Description>The Engine leverages a set of Service Managers in order to facilite when Code Generation is absolutely required.</Description>
    <PackageTags>dotnet;code;generation;Roslyn;cgr;engine;set;remove;purge;where;descriptor;comparer;eligible;assembly;generated;syntax;tree;load;services;service;managers;manager;transformation;document</PackageTags>
    <Version>1.0.0.25930</Version>
    <AssemblyVersion>1.0.0.25930</AssemblyVersion>
    <FileVersion>1.0.0.25930</FileVersion>
    <PackageVersion>1.0.0.25930</PackageVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Platform)'=='AnyCPU'">
    <DocumentationFile>bin\$(Configuration)\netstandard2.0\Code.Generation.Roslyn.Engine.Services.xml</DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="Code.Generation.Roslyn.Engine.Services.csproj.DotSettings" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Messages.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Messages.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Update="Messages.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Messages.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Code.Generation.Roslyn.Engine.Registries\Code.Generation.Roslyn.Engine.Registries.csproj" />
  </ItemGroup>

  <!-- ReSharper disable UnknownProperty -->
  <ItemGroup>
    <PackageReference Include="Newtonsoft.Json" Version="$(NewtonsoftJsonVersion)" />
    <PackageReference Include="Validate.Fluently" Version="$(ValidateFluentlyVersions)" />
  </ItemGroup>
  <!-- ReSharper restore UnknownProperty -->

  <!-- ReSharper disable UnknownProperty -->
  <ItemGroup Condition="Exists('..\packages\BumpAssemblyVersions\$(BumpAssemblyVersionsVersion)\build\BumpAssemblyVersions.targets')">
    <!-- `Bump´ occurring on `ReleaseInitial´ configuration. We want to ignore the `Release´ bump for the time being. -->
    <BumpVersionSpec Remove="*" Condition="'$(Configuration)' == 'Release'" />
  </ItemGroup>
  <!-- ReSharper restore UnknownProperty -->

  <ItemGroup>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>$(CodeGenerationToolName)</_Parameter1>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <!-- For lack of a better convention connecting these dots... -->
      <_Parameter1>$(RootNamespace).Tests</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>

  <ImportGroup>
    <Import Project="..\Licensing.props" />
  </ImportGroup>

</Project>
